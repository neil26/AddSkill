/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(root==NULL) return true;
        if(root->left==NULL && root->right==NULL) return true;
        return getSymmetric(root,root);
    }
    bool getSymmetric(TreeNode* node1,TreeNode* node2){
        if(node1==NULL && node2==NULL) return true;
        if(node1!=NULL && node2!=NULL && node1->val==node2->val){
            if(getSymmetric(node1->left,node2->right)&& getSymmetric(node1->right,node2->left))
                return true;
        }
            return false;

    }
};