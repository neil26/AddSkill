/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        vector<int>ans;
        if(root == NULL) return 0;
        findElement(root,ans);
        for(auto iter=ans.begin();iter<ans.end();iter++)
            cout<<*iter<<" ";
        return ans[k-1];
    }
    void findElement(TreeNode *root, vector<int>& listToAdd)
    {
        if(root != NULL)
        {
           findElement(root->left, listToAdd);
           listToAdd.push_back(root->val);
           findElement(root->right, listToAdd);
        }
    }
};