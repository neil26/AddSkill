/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL){
            return {};
        }
        queue<TreeNode*> q; 
        // Enqueue Root and initialize height 
        q.push(root);
        while (q.empty() == false) 
        { 
            
            // Print front of queue and remove it from queue 
            int size=q.size();
            vector<int>x;
            for(int i=1;i<=size;i++){
            TreeNode* node = q.front(); 
            
            x.push_back(node->val);
            q.pop();   
            
            /* Enqueue left child */
            if (node->left != NULL) 
                q.push(node->left); 

            /*Enqueue right child */
            if (node->right != NULL) 
                q.push(node->right); 
            }
             ans.push_back(x);

        } 
        return ans;
    }
};