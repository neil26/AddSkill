/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode* root= createBST(nums,0,nums.size()-1);
        return root;
        
    }
    TreeNode* createBST(vector<int>&ans,int low,int high){
        if(low>high) return NULL;
        int mid=(low+(high-low)/2);
        TreeNode* temp=new TreeNode(ans[mid]);
        temp->left=createBST(ans,low,mid-1);
        temp->right=createBST(ans,mid+1,high);
        return temp;
    }
    
};